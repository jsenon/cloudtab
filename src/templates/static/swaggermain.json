{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this package is to provide Api Interface",
    "title": "CloudTab.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "name": "Julien SENON",
      "email": "julien.senon@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:9010",
  "basePath": "/api",
  "paths": {
    "/servers": {
      "get": {
        "description": "This will show all available asset by default.",
        "tags": [
          "servers"
        ],
        "summary": "Lists servers",
        "operationId": "listServer",
        "responses": {
          "200": {
            "description": "server",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/server"
              }
            }
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      },
      "post": {
        "description": "This will register asset.",
        "tags": [
          "servers"
        ],
        "summary": "Add a server",
        "operationId": "createServer",
        "parameters": [
          {
            "x-go-name": "Server",
            "description": "Server to submit",
            "name": "server",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/successAnswer"
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      }
    },
    "/servers/import": {
      "post": {
        "description": "This will insert multiple servers.",
        "tags": [
          "servers"
        ],
        "summary": "Import / Add multiple Servers",
        "operationId": "importServer",
        "parameters": [
          {
            "x-go-name": "Server",
            "description": "Server to submit",
            "name": "multiserver",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/server"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/successAnswer"
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      }
    },
    "/servers/{id}": {
      "get": {
        "description": "This will list details for specific server.",
        "tags": [
          "servers"
        ],
        "summary": "Lists specific server",
        "operationId": "getServerById",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "description": "id Server Generated",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "server",
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      },
      "delete": {
        "description": "This will delete asset.",
        "tags": [
          "servers"
        ],
        "summary": "Delete servers",
        "operationId": "deleteServer",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "description": "id Server Generated",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/successAnswer"
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      },
      "patch": {
        "description": "This will update details for specific server.",
        "tags": [
          "servers"
        ],
        "summary": "Update specific server",
        "operationId": "updateServer",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "description": "id Server Generated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Server",
            "description": "Server to submit",
            "name": "server",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/successAnswer"
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      }
    },
    "/status/about": {
      "get": {
        "description": "This will details for specific server.",
        "tags": [
          "status"
        ],
        "summary": "Check if service is ip and running",
        "operationId": "about",
        "responses": {
          "200": {
            "$ref": "#/responses/statusjson"
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      }
    },
    "/status/am-i-up": {
      "get": {
        "description": "This will details for specific server.",
        "tags": [
          "status"
        ],
        "summary": "Check if service is ip and running",
        "operationId": "amiup",
        "responses": {
          "200": {
            "$ref": "#/responses/statusjson"
          },
          "default": {
            "$ref": "#/responses/validationError"
          }
        }
      }
    }
  },
  "definitions": {
    "HardwareDefinition": {
      "type": "object",
      "properties": {
        "CPU": {
          "description": "Server CPU Speed",
          "type": "string"
        },
        "Model": {
          "description": "Server Model",
          "type": "string"
        },
        "RAM": {
          "description": "Server Memory",
          "type": "string"
        }
      },
      "x-go-package": "db"
    },
    "Localisation": {
      "type": "object",
      "properties": {
        "Building": {
          "description": "Server Building",
          "type": "string"
        },
        "Rack": {
          "description": "Server Rack",
          "type": "string"
        },
        "Room": {
          "description": "Server Room",
          "type": "string"
        }
      },
      "x-go-package": "db"
    },
    "Networks": {
      "type": "object",
      "properties": {
        "Ipaddr": {
          "description": "Server Ip Add associated",
          "type": "string",
          "x-go-name": "IpAddr"
        },
        "MAC": {
          "description": "Server VLAN",
          "type": "string"
        },
        "Patchpanel": {
          "description": "Server Patch Panel Number",
          "type": "string",
          "x-go-name": "PatchPanel"
        },
        "Serverport": {
          "description": "Server Port",
          "type": "string",
          "x-go-name": "ServerPort"
        },
        "Switch": {
          "description": "Server Switch",
          "type": "string"
        },
        "Vlan": {
          "description": "Server vlan",
          "type": "string"
        }
      },
      "x-go-package": "db"
    },
    "ObjectId": {
      "description": "http://www.mongodb.org/display/DOCS/Object+IDs",
      "type": "string",
      "title": "ObjectId is a unique ID identifying a BSON value. It must be exactly 12 bytes\nlong. MongoDB objects by default have such a property set in their \"_id\"\nproperty.",
      "x-go-package": "gopkg.in/mgo.v2/bson"
    },
    "server": {
      "description": "A Server have multiple information to be stored.",
      "type": "object",
      "title": "Server represents the asset for this application",
      "properties": {
        "Assetcode": {
          "description": "Server Asset Code",
          "type": "string",
          "x-go-name": "AssetCode"
        },
        "CMDBName": {
          "description": "Server Name",
          "type": "string"
        },
        "Function": {
          "description": "Server Function",
          "type": "string"
        },
        "Hardwarerows": {
          "description": "Server Hardware Definition",
          "x-go-name": "HardwareDefinition",
          "$ref": "#/definitions/HardwareDefinition"
        },
        "InsertTime": {
          "description": "Server Insert Time"
        },
        "Localisationrows": {
          "description": "Server Localisation",
          "x-go-name": "Localisation",
          "$ref": "#/definitions/Localisation"
        },
        "Networksrows": {
          "description": "Server Network Definition",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Networks"
          },
          "x-go-name": "Networking"
        },
        "Remarks": {
          "description": "Remark associate to server",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Server Serial Number",
          "type": "string"
        },
        "Status": {
          "description": "Server Status",
          "type": "string"
        },
        "UpdateTime": {
          "description": "Server Update Time"
        },
        "id": {
          "description": "ID Server Generated",
          "x-go-name": "ID",
          "$ref": "#/definitions/ObjectId"
        }
      },
      "x-go-name": "Server",
      "x-go-package": "db"
    }
  },
  "responses": {
    "statusjson": {
      "description": "Status Answer",
      "headers": {
        "statusmessage": {
          "type": "string"
        }
      }
    },
    "successAnswer": {
      "description": "Success Answer",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "x-go-name": "Code"
          },
          "field": {
            "type": "string",
            "x-go-name": "Field"
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    },
    "validationError": {
      "description": "Input failed validation.",
      "schema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "x-go-name": "Code"
          },
          "field": {
            "type": "string",
            "x-go-name": "Field"
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          }
        }
      }
    }
  }
}